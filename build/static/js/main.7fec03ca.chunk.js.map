{"version":3,"sources":["components/Navigation/Drawer/Drawer.css","components/Navigation/MenuToggle/MenuToggle.css","containers/Quiz/Quiz.css","components/ActiveQuiz/ActiveQuiz.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.css","components/FinishedQuiz/FinishedQuiz.css","components/UI/Button/Button.css","components/UI/Loader/Loader.css","components/UI/Input/Input.css","containers/Auth/Auth.css","hoc/Layout/Layout.css","components/UI/Backdrop/Backdrop.css","components/ActiveQuiz/AnswersList/AnswersList.css","containers/QuizList/QuizList.css","containers/QuizCreator/QuizCreator.css","components/UI/Select/Select.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","axios/axios-quiz.js","components/UI/Loader/Loader.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","containers/Auth/Auth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Drawer","close","active","MenuToggle","open","Quiz","QuizWrapper","ActiveQuiz","Question","AnswerItem","success","error","FinishedQuiz","Button","button","primary","Loader","lds-ripple","center","Input","invalid","Auth","AuthForm","Layout","Backdrop","AnswersList","QuizList","QuizCreator","Select","props","cls","classes","isOpen","push","react_default","a","createElement","className","join","onClick","onToggle","links","to","label","exact","clickHandler","_this","onClose","_this2","this","map","link","index","key","react_router_dom","activeClassName","Fragment","renderLinks","UI_Backdrop_Backdrop","Component","state","menu","toggleMenuHandler","setState","menuCloseHandler","Navigation_Drawer_Drawer","Navigation_MenuToggle_MenuToggle","children","onAnswerClick","answers","id","text","AnswersList_AnswerItem_AnswerItem","answerNumber","question","quizLength","ActiveQuiz_AnswersList_AnswersList","type","disabled","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","UI_Button_Button","onRetry","axios","create","baseURL","isFinished","activeQuestion","answerState","loading","onAnswerClickHandler","answerId","rightAnswerId","defineProperty","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","get","concat","match","params","response","data","console","log","_context","t0","UI_Loader_Loader","components_FinishedQuiz_FinishedQuiz","components_ActiveQuiz_ActiveQuiz","quizes","name","forEach","renderQuizes","isInvalid","_ref","valid","touched","shouldValidate","inputType","htmlFor","Math","random","value","onChange","errorMessage","createControl","config","validation","objectSpread","validateForm","formControls","isFormValid","control","hasOwnProperty","Auxiliary","options","option","createOptionControl","number","required","createFormControls","option1","option2","option3","option4","submitHandler","event","preventDefault","addQuestionHandler","_this$state$formContr","questionItem","createQuizHandler","_callee","regenerator_default","wrap","prev","next","post","stop","changeHandler","controlName","arguments","undefined","isValid","trim","validate","selectChangeHandler","target","Auxiliary_Auxiliary","UI_Input_Input","select","UI_Select_Select","onSubmit","renderInputs","email","password","minLength","loginHandler","authData","returnSecureToken","sent","registerHandler","_callee2","_context2","onChangeHandler","validateControl","is","App","hoc_Layout_Layout","react_router","path","component","Boolean","location","hostname","app","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fec03ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer--l2o1Z\",\"close\":\"Drawer__close--2WTLc\",\"active\":\"Drawer__active--2S50O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle--1Ffb2\",\"open\":\"MenuToggle__open--32P8T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz__Quiz--1YgKh\",\"QuizWrapper\":\"Quiz__QuizWrapper--3xC_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz__ActiveQuiz--2aF-E\",\"Question\":\"ActiveQuiz__Question--1DBQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem--2E3aR\",\"success\":\"AnswerItem__success--1LWwO\",\"error\":\"AnswerItem__error--33P5D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz__FinishedQuiz--2KeHu\",\"success\":\"FinishedQuiz__success--2INri\",\"error\":\"FinishedQuiz__error--3HVNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button--ajevi\",\"button\":\"Button__button--1yw-A\",\"error\":\"Button__error--3i2F2\",\"success\":\"Button__success--1wqIA\",\"primary\":\"Button__primary--2Limk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader__Loader--2f_1D\",\"lds-ripple\":\"Loader__lds-ripple---Lu5S\",\"center\":\"Loader__center--1imo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input--1VROp\",\"invalid\":\"Input__invalid--iI0zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth--1TInt\",\"AuthForm\":\"Auth__AuthForm--38dS6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout--1WKx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop--eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList--8k9Jp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList__QuizList--1Dlta\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator--2R7qz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select--zn-IS\"};","import React from 'react';\r\nimport classes from './MenuToggle.css';\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if(props.isOpen){\r\n        cls.push('fa-times');\r\n        cls.push(classes.open);\r\n    } else{\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return(\r\n        <i\r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './Backdrop.css';\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>\r\n\r\nexport default Backdrop;","import React, {Component} from 'react';\r\nimport classes from './Drawer.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nconst links = [\r\n    {to : '/', label : 'List', exact: true},\r\n    {to : '/auth', label : 'Sign in', exact: false},\r\n    {to : '/quiz-creator', label : 'Create new quiz', exact: false}\r\n];\r\n\r\nclass Drawer extends Component{\r\n\r\n    clickHandler = () => {\r\n        this.props.onClose();\r\n    }\r\n\r\n    renderLinks(){\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick = {this.clickHandler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer];\r\n\r\n        if(!this.props.isOpen){\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                     <ul>\r\n                         { this.renderLinks() }\r\n                     </ul>\r\n                </nav>\r\n                { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer;","import React, {Component} from 'react';\r\nimport classes from './Layout.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                />\r\n\r\n                <MenuToggle\r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport classes from './AnswerItem.css';\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem];\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state]);\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answers.id)}\r\n        >\r\n            { props.answers.text }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem;","import React from 'react';\r\nimport classes from './AnswersList.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        { props.answers.map((answers, index) =>{\r\n            return(\r\n                <AnswerItem\r\n                    key = {index}\r\n                    answers = {answers}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state = {props.state ? props.state[answers.id] : null}\r\n                />\r\n            )\r\n        }) }\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n\r\n            <small>{props.answerNumber}/{props.quizLength}</small>\r\n        </p>\r\n\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './Button.css';\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishedQuiz.css';\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCount = Object.keys(props.results).reduce((total, key)=>{\r\n        if(props.results[key] === 'success'){\r\n            total++;\r\n        }\r\n        return total;\r\n    }, 0)\r\n\r\n    return(\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                        >\r\n                            <strong>{index + 1}</strong>. &nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>success {successCount} / {props.quiz.length}</p>\r\n\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Repeat</Button>\r\n                <Link to=\"/\">\r\n                    <Button type=\"success\">to test list</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-55b26.firebaseio.com/'\r\n})","import React from 'react';\r\nimport classes from './Loader.css';\r\n\r\nconst Loader = props => (\r\n\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div />\r\n            <div />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;","import React, {Component} from 'react';\r\nimport classes from './Quiz.css';\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\r\nimport axios from '../../axios/axios-quiz';\r\nimport Loader from '../../components/UI/Loader/Loader'\r\n\r\nclass Quiz extends Component{\r\n    state = {\r\n        results: {}, // {[id] : success/error}\r\n        isFinished: false,\r\n        activeQuestion : 0,\r\n        answerState: null,\r\n        quiz: [],\r\n        loading: true\r\n    };\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n\r\n        if(this.state.answerState){\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if(this.state.answerState[key] === 'success'){\r\n                return;\r\n            }\r\n        }\r\n\r\n        const question = this.state.quiz[this.state.activeQuestion];\r\n        const results = this.state.results;\r\n\r\n        if(question.rightAnswerId === answerId){\r\n            if(!results[question.id]) {\r\n                results[question.id] = 'success';\r\n            }\r\n\r\n            this.setState({\r\n                answerState: {[answerId]: 'success'},\r\n                results: results\r\n            });\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if(this.isQuizFinished()){\r\n                    this.setState({\r\n                        isFinished:true\r\n                    })\r\n                }else{\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    });\r\n                }\r\n                window.clearTimeout(timeout);\r\n            }, 1000);\r\n        }else{\r\n            results[question.id] = 'error';\r\n            this.setState({\r\n                answerState: {[answerId]: 'error'},\r\n                results : results\r\n            })\r\n        }\r\n    };\r\n\r\n    isQuizFinished(){\r\n        return this.state.activeQuestion + 1 === this.state.quiz.length;\r\n    }\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n            isFinished: false,\r\n            results: {}\r\n        })\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try{\r\n            const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\r\n            const quiz = response.data;\r\n\r\n            this.setState({\r\n                quiz,\r\n                loading: false\r\n            })\r\n        }catch (e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Answer all the questions</h1>\r\n\r\n                    {\r\n                        this.state.loading\r\n                        ? <Loader />\r\n                        : this.state.isFinished\r\n                            ? <FinishedQuiz\r\n                                results={this.state.results}\r\n                                quiz={this.state.quiz}\r\n                                onRetry={this.retryHandler}\r\n                            />\r\n                            : <ActiveQuiz\r\n                                question = {this.state.quiz[this.state.activeQuestion].question}\r\n                                answers = {this.state.quiz[this.state.activeQuestion].answers}\r\n                                onAnswerClick={this.onAnswerClickHandler}\r\n                                quizLength = {this.state.quiz.length}\r\n                                answerNumber = {this.state.activeQuestion + 1}\r\n                                state={this.state.answerState}\r\n                            />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz","import React, {Component} from 'react';\r\nimport classes from './QuizList.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport axios from '../../axios/axios-quiz';\r\n\r\nexport default class QuizList extends Component{\r\n\r\n    state = {\r\n        quizes : [],\r\n        loading: true\r\n    }\r\n\r\n    renderQuizes() {\r\n        return this.state.quizes.map((quiz) => {\r\n            return(\r\n                <li\r\n                    key={quiz.id}\r\n                >\r\n                    <NavLink to={'/quiz/' + quiz.id}>\r\n                       {quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await axios.get('/quizes.json');\r\n\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Test №${index + 1}`\r\n                })\r\n            })\r\n            this.setState({quizes, loading: false});\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>QuizList</h1>\r\n                    {\r\n                        this.state.loading\r\n                        ? <Loader/>\r\n                        :   <ul>\r\n                                {this.renderQuizes()}\r\n                            </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport classes from './Input.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}){\r\n    return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text';\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if(isInvalid(props)){\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return(\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n\r\n            {\r\n                isInvalid(props)\r\n                    ? <span>{props.errorMessage || 'Input the correct value.'}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation){\r\n        return true\r\n    }\r\n\r\n    let isValid = true;\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n    for(let control in formControls){\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = formControls[control].valid && isFormValid;\r\n        }\r\n    }\r\n\r\n    return isFormValid;\r\n}","const Auxiliary  = props => props.children;\r\n\r\nexport default Auxiliary;","import React from 'react';\r\nimport classes from './Select.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index) => {\r\n                    return(\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                }) }\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport {createControl, validate, validateForm} from '../../form/formFramework';\r\nimport Auxillary from '../../hoc/Auxiliary/Auxiliary';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport axios from '../../axios/axios-quiz';\r\n\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Variant ${number}`,\r\n        errorMessage: 'Option field cannot be empty',\r\n        id: number\r\n    }, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return{\r\n        question: createControl({\r\n            label: 'Input question:',\r\n            errorMessage: 'Question cannot be empty'\r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\nexport default class QuizCreator extends Component{\r\n\r\n    state = {\r\n        quiz: [],\r\n        isFormValid : false,\r\n        rightAnswerId: 1,\r\n        formControls : createFormControls()\r\n    };\r\n\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    addQuestionHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const quiz = this.state.quiz.concat();\r\n        const index = quiz.length + 1;\r\n\r\n        const {question, option1, option2, option3, option4} = this.state.formControls;\r\n\r\n        const questionItem = {\r\n            question: question.value,\r\n            id: index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: option1.value, id: option1.id},\r\n                {text: option2.value, id: option2.id},\r\n                {text: option3.value, id: option3.id},\r\n                {text: option4.value, id: option4.id}\r\n            ]\r\n        };\r\n\r\n        quiz.push(questionItem);\r\n\r\n        this.setState({\r\n            quiz,\r\n            isFormValid : false,\r\n            rightAnswerId: 1,\r\n            formControls : createFormControls()\r\n        })\r\n    };\r\n\r\n    createQuizHandler = async event => {\r\n        event.preventDefault()\r\n\r\n        try{\r\n           await axios.post('/quizes.json', this.state.quiz);\r\n\r\n           this.setState({\r\n               quiz: [],\r\n               isFormValid : false,\r\n               rightAnswerId: 1,\r\n               formControls : createFormControls()\r\n           })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n        // axios.post('https://react-quiz-55b26.firebaseio.com/quizes.json', this.state.quiz)\r\n        //     .then(response => {\r\n        //         console.log(response)\r\n        //     })\r\n        //     .catch(error => console.log(error));\r\n    };\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = { ...this.state.formControls };\r\n        const control = { ...formControls[controlName] };\r\n\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        this.setState({\r\n            formControls,\r\n            isFormValid: validateForm(formControls)\r\n        })\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n\r\n            return (\r\n                <Auxillary key={controlName + index}>\r\n                    <Input\r\n                    label={control.label}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    shouldValidate={!!control.validation}\r\n                    touched={control.touched}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.changeHandler(event.target.value, controlName)}\r\n                />\r\n                    { index === 0 ? <hr/> : null }\r\n                </Auxillary>\r\n            )\r\n        })\r\n    }\r\n\r\n    selectChangeHandler = event => {\r\n        this.setState({\r\n            rightAnswerId: +event.target.value\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const select = <Select\r\n            label=\"Choose correct answer\"\r\n            value={this.state.rightAnswerId}\r\n            onChange={this.selectChangeHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n\r\n        return(\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>QuizCreator</h1>\r\n\r\n                    <form onSubmit={this.submitHandler}>\r\n\r\n                        { this.renderInputs() }\r\n\r\n                        {select}\r\n\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.addQuestionHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Add question\r\n                        </Button>\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.createQuizHandler}\r\n                            disabled={this.state.quiz.length === 0}\r\n                        >\r\n                            Create Quiz\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport classes from './Auth.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport is from 'is_js';\r\nimport axios from 'axios';\r\n\r\n/*function validateEmail(email) {\r\n    const regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return regExp.test(String(email).toLowerCase());\r\n}*/ //Не использую потому что линт выдает варнинг, обошёл библиотекой is_js\r\n\r\nexport default class Auth extends Component{\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls:{\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Invalid Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true,\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Password',\r\n                errorMessage: 'Invalid password',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    loginHandler = async () => {\r\n        const authData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true\r\n        }\r\n        try{\r\n            const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBVrgGuT--z52fll2namFZukUOjxUIYYf8', authData);\r\n\r\n            console.log(response.data)\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    registerHandler = async () => {\r\n        const authData = {\r\n            email: this.state.formControls.email.value,\r\n            password: this.state.formControls.password.value,\r\n            returnSecureToken: true\r\n        }\r\n        try{\r\n            const response = await axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBVrgGuT--z52fll2namFZukUOjxUIYYf8', authData);\r\n\r\n            console.log(response.data)\r\n        }catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    validateControl(value, validation){\r\n        if (!validation){\r\n            return true;\r\n        }\r\n\r\n        let isValid = true;\r\n\r\n        if(validation.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(validation.email){\r\n            isValid = is.email(value) && isValid;\r\n        }\r\n\r\n        if(validation.minLength){\r\n        isValid = value.length >= validation.minLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = { ...this.state.formControls };\r\n        const control = { ...formControls[controlName] };\r\n\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n\r\n        formControls[controlName] = control;\r\n\r\n        let isFormValid = true;\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n           isFormValid = formControls[name].valid && isFormValid\r\n        });\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        });\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return(\r\n                <Input\r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={!!control.validation}\r\n                    onChange={event => {\r\n                        this.onChangeHandler(event, controlName)\r\n                    }}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Authorization</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n\r\n                        {this.renderInputs()}\r\n\r\n                        <Button\r\n                            type={'success'}\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Sign in\r\n                        </Button>\r\n                        <Button\r\n                            type={'primary'}\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >\r\n                            Sign up\r\n                        </Button>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport Auth from './containers/Auth/Auth';\nimport {Route, Switch} from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n        <Layout>\n            <Switch>\n                <Route path = \"/auth\" component = {Auth}/>\n                <Route path = \"/quiz-creator\" component = {QuizCreator}/>\n                <Route path = \"/quiz/:id\" component = {Quiz}/>\n                <Route path = \"/\" component = {QuizList}/>\n            </Switch>\n        </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}